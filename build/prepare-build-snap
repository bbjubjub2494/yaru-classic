#!/bin/bash
set -e

# download snapcraft.yaml from template
mkdir -p snap/
curl -o snap/snapcraft.yaml "$THEME_HELPER_REPO_URL/snap/snapcraft.yaml"

# use local source for current repo
sed -i "s#    source: .*$TRAVIS_REPO_SLUG\.git#    source: \.#" snap/snapcraft.yaml

# build and release it

# Note: we need bionic meson version and sassc. As only those additions alongside git will be installed
# change directly sources.list
cmd="sed -i s/xenial/bionic/g /etc/apt/sources.list && apt update -qq && cd $(pwd) && snapcraft"

# Only release as a snap from main repo (ubuntu slug), enabling other forks to test build the snap.
REPO="${TRAVIS_REPO_SLUG%%/*}"
channel=""
if [ "$REPO" == "ubuntu" ]; then
        # if it's a PR event from
        if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then
                channel="edge/${TRAVIS_REPO_SLUG#*/}-pr$TRAVIS_PULL_REQUEST"
                echo "PR to main ubuntu repo: will release to $channel"
        # only push build to master are released, the rest will be as PR via dedicated channel
        elif [ "$TRAVIS_BRANCH" == "master" ]; then
                cmd="$cmd && snapcraft push *.snap --release=$channel"
                channel="edge"
                echo "Push to master ubuntu repo: will release to $channel"
        fi

        if [ ! -z "$channel" ]; then
                cmd="$cmd && echo \"$SNAP_TOKEN\" | snapcraft login --with - && snapcraft push *.snap --release=$channel"
        fi
fi

docker run -v $(pwd):$(pwd) -t snapcore/snapcraft sh -c "$cmd"

# write on PR install instructions for the snap branch
[ "$TRAVIS_PULL_REQUEST" == "false" ] && exit 0
curl -H "Authorization: token ${GITHUB_TOKEN}" -X POST \
        -d "{\"body\": \"A new test snap version is available using: \`snap install communitheme --channel=$channel\`.\nFurther available updates will track that pull request then.\n\nSwitch back to stable or edge snap with \`snap refresh communitheme --stable\` or \`snap refresh communitheme --edge\` once you are done with it!\"}" \
        "https://api.github.com/repos/${TRAVIS_REPO_SLUG}/issues/${TRAVIS_PULL_REQUEST}/comments"
