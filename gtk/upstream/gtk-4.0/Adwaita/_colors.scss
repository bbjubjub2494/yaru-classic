// When color definition differs for dark and light variant
// it gets @if ed depending on $variant

$base_color: if($variant == 'light', #ffffff, lighten(desaturate(#241f31, 100%), 2%));
$text_color: if($variant == 'light', black, white);
$bg_color: if($variant == 'light', #f6f5f4, darken(desaturate(#3d3846, 100%), 4%));
$fg_color: if($variant == 'light', #2e3436, #eeeeec);

$selected_fg_color: #ffffff;
$selected_bg_color: if($variant == 'light', #3584e4, #62a0ea);
$selected_borders_color: darken($selected_bg_color, 15%);
$borders_color: if($variant == 'light', darken($bg_color, 18%), darken($bg_color, 10%));
$alt_borders_color: if($variant == 'light', darken($bg_color, 24%), darken($bg_color, 18%));
$borders_edge: if($variant == 'light', transparentize(white, 0.2), transparentize($fg_color, 0.93));
$link_color:darken($selected_bg_color, 10%);
$link_visited_color: darken($selected_bg_color, 20%);
$dark_fill: mix($borders_color, $bg_color, 50%);
$headerbar_bg_color: $bg_color;
$menu_color: $base_color;

$view_hover_color: #{"alpha(currentColor, .07)"};
$view_active_color: #{"alpha(currentColor, .16)"};
$view_selected_color: #{"alpha(currentColor, .1)"};
$view_selected_hover_color: #{"alpha(currentColor, .13)"};
$view_selected_active_color: #{"alpha(currentColor, .19)"};

$trough_color: #{"alpha(currentColor, .15)"};
$trough_hover_color: #{"alpha(currentColor, .2)"};
$trough_active_color: #{"alpha(currentColor, .25)"};

$button_color: #{"alpha(currentColor, .1)"};
$button_hover_color: #{"alpha(currentColor, .15)"};
$button_active_color: #{"alpha(currentColor, .25)"};
$button_checked_color: #{"alpha(currentColor, .2)"};
$button_checked_hover_color: #{"alpha(currentColor, .25)"};
$button_checked_active_color: #{"alpha(currentColor, .35)"};

$fill_color: $selected_bg_color;
$fill_text_color: $selected_fg_color;
$fill_hover_color: mix($selected_bg_color, $text_color, 90%);
$fill_active_color: mix($selected_bg_color, $text_color, 80%);

$slider_color: mix(white, $base_color, 80%);
$slider_hover_color: white;

$scrollbar_bg_color: if($variant == 'light', mix($bg_color, $fg_color, 80%), mix($base_color, $bg_color, 50%));
$scrollbar_slider_color: mix($fg_color, $bg_color, 60%);
$scrollbar_slider_hover_color: mix($fg_color, $bg_color, 80%);
$scrollbar_slider_active_color: darken($selected_bg_color, 10%);

$warning_color: #e5a50a;
$error_color: #e01b24;
$success_color: if($variant == 'light', #33d17a, darken(#33d17a, 10%));
$suggested_color: $selected_bg_color;
$destructive_color: if($variant == 'light', $error_color, darken($error_color, 10%));

$osd_fg_color: #eeeeec;
$osd_text_color: white;
$osd_bg_color: if($variant == 'light', transparentize(darken(desaturate(#3d3846, 100%), 4%),0.3), transparentize(darken(desaturate(#3d3846, 100%), 10%),0.3));
$osd_insensitive_bg_color: transparentize(mix($osd_fg_color, opacify($osd_bg_color, 1), 10%), 0.5);
$osd_insensitive_fg_color: mix($osd_fg_color, opacify($osd_bg_color, 1), 50%);
$osd_borders_color: transparentize(black, 0.3);

$sidebar_bg_color: mix($bg_color, $base_color, 50%);

$tooltip_borders_color: transparentize(white, 0.9);
$shadow_color: transparentize(black, 0.9);

$drop_target_color: if($variant == 'light', #2ec27e, #26a269);

//insensitive state derived colors
$insensitive_fg_color: mix($fg_color, $bg_color, 50%);
$insensitive_bg_color: mix($bg_color, $base_color, 60%);
$insensitive_borders_color: mix($borders_color, $bg_color, 80%);

//special cased widget colors
$focus_border_color:  transparentize($selected_bg_color, 0.5);
$alt_focus_border_color: if($variant == 'light', transparentize(white, 0.2), transparentize(white,0.7));
$dim_label_opacity: 0.55;

// High Contrast color overrides
@if $contrast == 'high' {

  $fg_color: if($variant == 'light', darken($fg_color, 3%), lighten($fg_color, 2%));
  $bg_color: if($variant == 'light', lighten($bg_color, 3%), darken($bg_color, 2%));
  $selected_bg_color: darken($selected_bg_color,10%);
  $selected_borders_color: darken($selected_borders_color, 10%);
  $borders_color: if($variant == 'light', darken($borders_color, 30%), lighten($borders_color, 30%));
  $alt_borders_color: if($variant == 'light', darken($alt_borders_color, 33%), lighten($alt_borders_color, 28%));

  //insensitive state derived colors
  $insensitive_fg_color: mix($fg_color, $bg_color, 50%);
  $insensitive_bg_color: mix($bg_color, $base_color, 60%);
  $insensitive_borders_color: mix($borders_color, $bg_color, 80%);

  //focus rings
  $focus_border_color: transparentize($selected_bg_color, 0.2);
  $alt_focus_border_color: if($variant == 'light', white, transparentize(white,0.4));

  $dim_label_opacity: 0.9;

}
